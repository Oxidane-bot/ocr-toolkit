[project]
name = "ocr-cli"
version = "0.2.0"
description = "Fast document to Markdown converter with advanced OCR support"
authors = [{name = "OCR Toolkit Team", email = "contact@example.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12.0"
keywords = ["document-conversion", "markdown", "ocr", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop", 
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing",
    "Topic :: Utilities",
]

dependencies = [
    # Office document conversion support
    "docx2pdf>=0.1.8",
    "pywin32>=311; sys_platform == 'win32'",
    # OCR support (for scanned documents)
    "torch>=2.7.0",
    "torchvision>=0.18.0",
    "python-doctr>=1.0.0",
    "ocrmypdf",
    "pdf2image",
    # Use NumPy 2.0 to resolve MINGW-W64 Windows build issues
    "numpy>=2.0.0,<3.0.0",
    "scikit-image",
    # Core utilities
    "tqdm",
    "psutil>=7.0.0",
    # Let dependencies choose their preferred OpenCV version
    # "opencv-python>=4.8.0,<4.9.0",  # Removed - let EasyOCR/doctr choose
    "easyocr>=1.7.2",
    # Prefer GPU ONNX Runtime only (pin to 1.20.x)
    "onnxruntime-gpu>=1.20.0,<1.21.0",
    "cnocr[ort-gpu]>=2.3.2.1",
    # Hugging Face Hub for model downloads (required by CnOCR)
    "huggingface-hub[cli]>=0.28.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
ocr-convert = "ocr_toolkit.cli.convert:main"
ocr-extract = "ocr_toolkit.cli.extract:main"
ocr-search = "ocr_toolkit.cli.search:main"
ocr-bench = "ocr_toolkit.cli.benchmark:main"

[project.urls]
Homepage = "https://github.com/USER/ocr-toolkit"
Repository = "https://github.com/USER/ocr-toolkit.git"
Issues = "https://github.com/USER/ocr-toolkit/issues"

[tool.uv]
extra-index-url = ["https://download.pytorch.org/whl/cu128"]
# NumPy 2.0 resolves MINGW-W64 Windows build issues
index-strategy = "unsafe-best-match"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.13.2",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["ocr_toolkit*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "B904",   # raise from
    "SIM108", # use ternary operator (sometimes less readable)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["N802", "N803"]  # Allow non-lowercase function names in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
